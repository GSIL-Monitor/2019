
component ---> pages ---> /router/index.js --- main.js

把每个块做成组件  


MusicList.vue 歌曲列表 引入---> /pages/index.vue

	1. 引入  import MusicList from '../components/MusicList'
	2. 加载 export default {
	      name:'index',
	       
	      comments:{
	        MusicList
	      }
	    }
	
	3. 显示  <MusicList></MusicList>	




解析json

http://tingapi.ting.baidu.com/v1/restserver/ting?method=baidu.ting.billboard.billList&type="+this.musictype+"&size=5&offset=0
     
this.musictype  
	参数： type = 1-新歌榜
		  size = 10 //返回条目数量
	      offset = 0 //获取偏移

1. <router-link :to="{name:'Recommend',params:{musictype:musictype}}" tag="div" class="more-songs">

2. props:{
      musictype:{
        type:String,
        default:"1"
      }
    },

3.created(){
      const musiclistUrl = this.HOST + "/v1/restserver/ting?method=baidu.ting.billboard.billList&type="+this.musictype+"&size=5&offset=0"}
     



歌曲列表 MusicList.vue
歌名 作者  背景图

title: "生僻字",
author: "陈柯宇",
pic_big: "http://qukufile2.qianqian.com/data2/pic/2d5ab3120f08727becfc2803ee5402f7/611740447/611740447.jpg@s_1,w_150,h_150",

<div class="poster">
  <img :src="item.pic_big" :alt="item.title">
</div>
<div class="info">
  <div class="name">{{ item.title }}</div>
  <div class="author">{{ item.author }}</div>
</div>

<router-link 
:to="{name:'Recommend',params:{musictype:musictype}}"
tag="div" 
class="more-songs">
          查看该榜单&gt;
      </router-link>

export default {
    name:"musiclist",
    data(){
      return{
        loading:true,
        musicData:{
          song_list:[]  //song_list  歌曲列表 5首歌
        }
      }
    },
    props:{
      musictype:{
        type:String,
        default:"1"
      }
    },
    created(){
      const musiclistUrl = this.HOST + "/v1/restserver/ting?method=baidu.ting.billboard.billList&type="+this.musictype+"&size=5&offset=0"
      this.$axios.get(musiclistUrl)
        .then(res => {
          this.musicData = res.data
          this.loading = false
        })
        .catch(error =>{
          console.log(error);
        })
    }
  }




热歌榜 新歌榜 king榜

/router/index.js
引入
import HotMusic from "../pages/MusicList/HotMusic"
import NewMusic from "../pages/MusicList/NewMusic"
import KingMusic from "../pages/MusicList/KingMusic" 
加载
	路径
	name 
	component
     {
       path: '/hot',
       name: 'HotMusic',
       component: HotMusic
     },
     {
       path: '/king',
       name: 'KingMusic',
       component: KingMusic
     },
     {
       path: '/new',
       name: 'NewMusic',
       component: NewMusic
     }


把 歌曲列表 MusicList.vue 引入到 三个榜单里
	 //HotMusic.vue   NewMusic.vue   KingMusic.vue 
	import MusicList from "../../components/MusicList"
加载
	component:{MusicList}
显示 
	<div><MusicList></MusicList></div>

点击不同的榜单 显示对应的列表    列表是个架子 里面的信息 会变的
//HotMusic.vue     
<MusicList musictype="2" />

//NewMusic.vue
<MusicList musictype="1" />

//KingMusic.vue 
<MusicList musictype="16" /> //流行榜


重定向
打开页面 显示热歌榜高亮  
//index.js
routes: [
    {
      path: '/',
      name: 'Index',
      component: Index,
      redirect:"/hot",
      children:[]
    }


component ---> pages ---> router ---> main



热门歌单 显示的是歌手的图片和名字
<div 外层容器>
	<h2>标题</h2>
	<div>两行块  一个块上面是歌手头像 下面是歌手名字</div>
</div>


将 SingerList.vue 引入 Singer.vue
	//Singer.vue
	import SingerList from "../components/SingerList"

加载 
	components:{SingerList }
显示 
	<SingerList :key="index" v-for="(item,index) in singerListData" :singerid="item" />




歌手信息SingerInfo

路由 index.js <--- /pages/Singer/SingerInfo <--- /components/SingerMusic
SingerInfo是SingerMusic 的容器  显示位置

Singer.vue <-- SingerList.vue 两行  <--- SingerInfo<--SingerMusic歌手自己的歌曲


歌曲播放 MusicPlay

把 MusicList SingerMusic  里面的 li标签 换成 router-link    显示成tag='li'保护样式   

要携带id 

防盗链













app(object) 用来注册一个小程序  指定小程序的生命周期回调 

getAPP(object) 用来获取App实例

Page(Object) 函数用来注册一个页面

路由
getCurrentPages()  获取当前页面栈的实例



Mustache语法
	{{keyName}}  简单变量替换
	
	{{#keyName}} {{/keyName}} 以#开始、以/结束表示区块 一次或多次渲染
	
	{{^keyName}} {{/keyName}} 当keyName值为 false时才渲染 
	
	{{.}}                     表示枚举，可以循环输出整个数组                  
	
	{{!comments}}     表示注释
	
	{{>partials}}     表示子模块	



.wxs文件

	module对象
		exports: 通过该属性，可以对外共享本模块的私有变量与函数 
		module.exports.msg = "some msg";
	
	require函数
		require("./tools.wxs");	

<wxs> 标签

<wxs module="foo">
var some_msg = "hello world";
module.exports = {
    msg : some_msg,
}
</wxs>
<view> {{foo.msg}} </view>








视图容器
	view



页面链接
	<navigator> 
	属性
		url	当前小程序内的跳转链接


轮播 
	<swiper>
		<block wx:for="{{movies}}">
			<swiper-item>
				<image src="{{item.url}}"></inage>
			</swiper-item>
		</block>
	</swiper>
	

图片 image

mode属性
  center
	'center：不缩放图片，只显示图片的中间区域'
  scaleToFill	
  	不保持纵横比缩放图片，使图片的宽高完全拉伸至填满 image 元素

文本

要设置 
	组件间距 margin-top  
	字体颜色 color
	行距     line-height
	字体大小 font-size


进度条 

		
	<view class='column'>
	  <button class='button' type='primary' size='mini' bindtap='startDown'>开始下载</button>
	
	  <progress  percent="60"  activeColor="#FF571B" stroke-width='16'> </progress>
	</view>
	
	progress {
	  margin: 10px;
	  width:320rpx;
	   
	  border-radius:30px;
	  overflow:hidden;
	  }
	
	 
	Page({
	  data: {
	    isDown: false,
	    percent: 0,
	  },
	  startDown: function (e) {
	    this.setData({
	      isDown: true,
	      percent: 100,
	    })
	  }
	})	